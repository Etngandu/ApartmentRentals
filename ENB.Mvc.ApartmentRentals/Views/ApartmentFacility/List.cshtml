@using ENB.ApartmentRentals.Entities;
@model IEnumerable<ENB.Mvc.ApartmentRentals.Models.DisplayApartmentFacility>
@{
    ViewData["Title"] = "List";

}

<div class="alert alert-primary" role="alert">
    <h2><strong>Building : @ViewBag.Message </strong></h2><br/>
    <h3><strong>Apartment N° : @ViewBag.AparId</strong></h3>
</div>
<a asp-action="Create" id="addlawyer" asp-controller="ApartmentFacility" asp-route-Apartment_BuildingId="@ViewBag.Idapbld" asp-route-ApartmentId="@ViewBag.AparId" class="btn btn-success text-white" style="margin-bottom:10px"><i class="fa-solid fa-user"></i> New Facility</a>
<table id="ApartFacTable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>   
            <th>Facilitycode</th>           
            <th>facility_details</th>
            <th> </th>
        </tr>
    </thead>
</table>

<link href="~/lib/datatable/datatables-1.12.1/css/datatables.bootstrap5.min.css" rel="stylesheet" />

@section scripts{
    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="~/lib/datatable/datatables-1.12.1/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatable/datatables-1.12.1/js/datatables.bootstrap5.min.js"></script>
    <script>
        var Popup, datatable, IdBld = parseInt('@ViewBag.Idapbld'), IdAprt = parseInt('@ViewBag.AparId')
        $(document).ready(function () {
            datatable = $("#ApartFacTable").DataTable({
                "ajax": {
                    "url": "/ApartmentFacility/GetFacilities/?apartmentbuildingId=" + IdBld + "&apartmentId=" + IdAprt + "",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    
                    {
                        "data": "id"                      
                        
                    },
                    {
                        "data": "facilitycode",
                        "render": RefApartfac

                    },
                    { "data": "other_facility_details" },                    
                    {
                        "data": "id", "render": function (data) {
                            return "<a class= 'btn btn-primary btn-sm text-white' onclick=location.href='@Url.Action("Edit","ApartmentFacility")?id=" + data + "&Apartment_BuildingId=" + IdBld + "&apartmentId=" + IdAprt +"'><i class='fas fa-pencil'></i><b> Edit</b></a>" + "\r\n" +
                                "<a class= 'btn btn-danger btn-sm text-white' style = 'margin-left:5px' onclick =location.href='@Url.Action("Delete","ApartmentFacility")?id=" + data + "&Apartment_BuildingId=" + IdBld + "&apartmentId=" + IdAprt + "'> <i class='fa-solid fa-trash-can' > </i><b> Delete</b > </a> ";
                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "600px"
                    }

                ],
                "language": {

                    "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                }

            });

        });



        function RefApartfac(data, type, row, meta) {
            var typApart;
            switch (data) {
                case 1:

                    typApart = "Car Parking" 
                    break;
                case 2:
                    typApart = "Bike Parking"
                    break;
                case 3:
                    typApart = "Swimming Pool"
                    break;
                case 4:
                    typApart = "Gym"
                    break;
                case 5:
                    typApart = "Concierge And Security"
                    break;
                case 6:
                    typApart = "Fitness Studios"
                    break;
                case 7:
                    typApart = "Conference Rooms"
                    break;
                case 8:
                    typApart = "On-Site Restaurant"
                    break;
                case 9:
                    typApart = "Green Space"
                    break;
                case 10:
                    typApart = "Co-Working Spaces"
                    break;
                case 11:
                    typApart = "Laundry Room"
                    break;
                case 12:
                    typApart = "WiFi In Common Areas"
                    break;
                default:
                // code block
            }
            return typApart;
        }

    </script>
    }

