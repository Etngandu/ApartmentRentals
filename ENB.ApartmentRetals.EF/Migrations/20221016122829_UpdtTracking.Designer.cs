// <auto-generated />
using System;
using ENB.ApartmentRentals.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ENB.ApartmentRentals.EF.Migrations
{
    [DbContext(typeof(ApartmentRentalsContext))]
    [Migration("20221016122829_UpdtTracking")]
    partial class UpdtTracking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ap_number")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<int>("Ap_type")
                        .HasColumnType("int");

                    b.Property<int>("Apartment_BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("Bathroom_count")
                        .HasColumnType("int");

                    b.Property<int>("Bedroom_count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other_apartement_details")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Room_count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Apartment_BuildingId");

                    b.ToTable("Apartment");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment_booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("Apartment_BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Booking_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Booking_start_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Booking_status_code")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("Other_booking_details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("Apartment_BuildingId");

                    b.HasIndex("GuestId");

                    b.ToTable("Apartment_booking");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment_Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Building_address")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Building_description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Building_full_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Building_manager")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Building_phone")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Building_short_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other_buiding_details")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Apartment_Buildings");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment_facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Apartement_id")
                        .HasColumnType("int");

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Facilitycode")
                        .HasColumnType("int");

                    b.Property<string>("Other_facility_details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Apartment_facility");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Gender_code")
                        .HasColumnType("int");

                    b.Property<string>("Guest_first_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Guest_last_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Other_guest_details")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "fa280f1d-1530-4109-9c0d-247aea4d1568",
                            ConcurrencyStamp = "770ec15d-0ee0-4896-8e5b-11e61357a508",
                            Name = "Visitor",
                            NormalizedName = "VISITOR"
                        },
                        new
                        {
                            Id = "cfe2599b-fdb1-4600-9a2f-66745ee366aa",
                            ConcurrencyStamp = "e239604e-0353-4ec5-9d3e-c7fdad471f9d",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment", b =>
                {
                    b.HasOne("ENB.ApartmentRetals.Entities.Apartment_Building", "Apartment_Building")
                        .WithMany()
                        .HasForeignKey("Apartment_BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment_Building");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment_booking", b =>
                {
                    b.HasOne("ENB.ApartmentRetals.Entities.Apartment", "Apartment")
                        .WithMany("Apartment_Bookings")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENB.ApartmentRetals.Entities.Apartment_Building", "Apartment_Building")
                        .WithMany()
                        .HasForeignKey("Apartment_BuildingId");

                    b.HasOne("ENB.ApartmentRetals.Entities.Guest", "Guest")
                        .WithMany("Apartment_Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Apartment_Building");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment_facility", b =>
                {
                    b.HasOne("ENB.ApartmentRetals.Entities.Apartment", "Apartment")
                        .WithMany("Apartment_Facilities")
                        .HasForeignKey("ApartmentId");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Apartment", b =>
                {
                    b.Navigation("Apartment_Bookings");

                    b.Navigation("Apartment_Facilities");
                });

            modelBuilder.Entity("ENB.ApartmentRetals.Entities.Guest", b =>
                {
                    b.Navigation("Apartment_Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
